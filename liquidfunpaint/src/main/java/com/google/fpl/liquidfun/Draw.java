/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.google.fpl.liquidfun;

public class Draw {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Draw(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Draw obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        liquidfunJNI.delete_Draw(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    liquidfunJNI.Draw_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    liquidfunJNI.Draw_change_ownership(this, swigCPtr, true);
  }

  public Draw() {
    this(liquidfunJNI.new_Draw(), true);
    liquidfunJNI.Draw_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void setFlags(long flags) {
    liquidfunJNI.Draw_setFlags(swigCPtr, this, flags);
  }

  public long getFlags() {
    return liquidfunJNI.Draw_getFlags(swigCPtr, this);
  }

  public void appendFlags(long flags) {
    liquidfunJNI.Draw_appendFlags(swigCPtr, this, flags);
  }

  public void clearFlags(long flags) {
    liquidfunJNI.Draw_clearFlags(swigCPtr, this, flags);
  }

  public void drawPolygon(byte[] vertices, int vertexCount, Color color) {
    liquidfunJNI.Draw_drawPolygon(swigCPtr, this, vertices, vertexCount, Color.getCPtr(color), color);
  }

  public void drawSolidPolygon(byte[] vertices, int vertexCount, Color color) {
    liquidfunJNI.Draw_drawSolidPolygon(swigCPtr, this, vertices, vertexCount, Color.getCPtr(color), color);
  }

  public void drawCircle(Vec2 center, float radius, Color color) {
    liquidfunJNI.Draw_drawCircle(swigCPtr, this, Vec2.getCPtr(center), center, radius, Color.getCPtr(color), color);
  }

  public void drawSolidCircle(Vec2 center, float radius, Vec2 axis, Color color) {
    liquidfunJNI.Draw_drawSolidCircle(swigCPtr, this, Vec2.getCPtr(center), center, radius, Vec2.getCPtr(axis), axis, Color.getCPtr(color), color);
  }

  public void drawParticles(byte[] centers, float radius, byte[] colors, int count) {
    liquidfunJNI.Draw_drawParticles(swigCPtr, this, centers, radius, colors, count);
  }

  public void drawSegment(Vec2 p1, Vec2 p2, Color color) {
    liquidfunJNI.Draw_drawSegment(swigCPtr, this, Vec2.getCPtr(p1), p1, Vec2.getCPtr(p2), p2, Color.getCPtr(color), color);
  }

  public void drawTransform(Transform xf) {
    liquidfunJNI.Draw_drawTransform(swigCPtr, this, Transform.getCPtr(xf), xf);
  }

  public final static int SHAPE_BIT = 0x0001;
  public final static int JOINT_BIT = 0x0002;
  public final static int AABB_BIT = 0x0004;
  public final static int PAIR_BIT = 0x0008;
  public final static int CENTER_OF_MASS_BIT = 0x0010;
  public final static int PARTICLE_BIT = 0x0020;

}
